<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.triz.goldenideabox.dao.CpqueryResultMapper">
  <resultMap id="BaseResultMap" type="com.triz.goldenideabox.model.CpqueryResult">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="cpquery_id" jdbcType="INTEGER" property="cpqueryId" />
    <result column="patent_id" jdbcType="INTEGER" property="patentId" />
    <result column="application_number" jdbcType="VARCHAR" property="applicationNumber" />
    <result column="official_status" jdbcType="VARCHAR" property="officialStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
  cpquery_id,patent_id, application_number,  official_status, create_time, update_time, status
  </sql>
  <insert id="insert" parameterType="com.triz.goldenideabox.model.CpqueryResult">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_cpquery_result (cpquery_id, patent_id, application_number, 
      official_status, create_time, update_time, 
      status)
    values (#{cpqueryId,jdbcType=INTEGER}, #{patentId,jdbcType=INTEGER}, #{applicationNumber,jdbcType=VARCHAR}, 
      #{officialStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.triz.goldenideabox.model.CpqueryResult">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_cpquery_result
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cpqueryId != null">
        cpquery_id,
      </if>
      <if test="patentId != null">
        patent_id,
      </if>
      <if test="applicationNumber != null">
        application_number,
      </if>
      <if test="officialStatus != null">
        official_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cpqueryId != null">
        #{cpqueryId,jdbcType=INTEGER},
      </if>
      <if test="patentId != null">
        #{patentId,jdbcType=INTEGER},
      </if>
      <if test="applicationNumber != null">
        #{applicationNumber,jdbcType=VARCHAR},
      </if>
      <if test="officialStatus != null">
        #{officialStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <insert id="updateApplicationNumbers">
    insert into t_cpquery_result (
      select #{id,jdbcType=INTEGER} as cpquery_id,
        tpp.patent_id as patent_id,
        tpp.`value` as application_number,
        ifnull(tpps.`value`,'') as official_status,
        now() as create_time ,
        NULL as update_time,
        0 as status
        from t_patent_property tpp
				left join t_patent_property tpps on tpp.patent_id = tpps.patent_id and tpps.sort_id = #{statusField,jdbcType=INTEGER}
        where  tpp.sort_id = #{applicationNumberField,jdbcType=INTEGER}  and tpp.patent_id in (
          select tp.id as patent_id
            from t_patent_property tpp
            left join t_patent tp on tpp.patent_id = tp.id
            where tpp.sort_id = #{matchField,jdbcType=INTEGER}
              and tpp.`value` regexp #{matchChar,jdbcType=VARCHAR}
              and tp.template_id = #{templateId,jdbcType=INTEGER}
              and tpp.patent_id not in (
                select patent_id from t_cpquery_result where date_format(create_time,'%yy-%mm-%dd') = date_format(now(),'%yy-%mm-%dd')
            )
        )
    );
  </insert>
  <delete id="deleteExpiredData" parameterType="java.lang.Integer">
    delete from t_cpquery_result
      where datediff(now(), create_time) not in (
        select num from (
          select distinct ( datediff(now(), create_time)) as num from t_cpquery_result order by num asc limit 0, #{num,jdbcType=INTEGER}
        ) a
      )
  </delete>

  <select id="getApplicationNumbers"  resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from t_cpquery_result
    where cpquery_id = #{id,jdbcType=INTEGER} and ( to_days(now()) - to_days(create_time)) = 0 and status = 0 order by create_time
  </select>

  <update id="updateResult" parameterType="com.triz.goldenideabox.model.CpqueryResult">
    update t_cpquery_result
    <set>
      <if test="officialStatus != null">
        official_status = #{officialStatus,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where cpquery_id = #{cpqueryId,jdbcType=INTEGER} and patent_id = #{patentId,jdbcType=INTEGER} and create_time = #{createTime,jdbcType=TIMESTAMP}
  </update>
  <select id="getCpqueryResultByDay"  resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from t_cpquery_result where cpquery_id = #{cpqueryId,jdbcType=INTEGER} and date_format(create_time,'%Y-%m-%d') = #{day,jdbcType=VARCHAR}
  </select>
  <select id="getCpqueryResult"  resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from t_cpquery_result
  </select>
</mapper>