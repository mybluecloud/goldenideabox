<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.triz.goldenideabox.dao.MessageMapper">
  <resultMap id="BaseResultMap" type="com.triz.goldenideabox.model.Message">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sender" jdbcType="INTEGER" property="sender" />
    <result column="receiver" jdbcType="INTEGER" property="receiver" />
    <result column="is_group" jdbcType="INTEGER" property="isGroup" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, sender, receiver, is_group, content, time, state
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.triz.goldenideabox.model.Message">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_message (id, sender, receiver, 
      is_group, content, time
      )
    values (#{id,jdbcType=INTEGER}, #{sender,jdbcType=INTEGER}, #{receiver,jdbcType=INTEGER}, 
      #{isGroup,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP},
      #{state,jdbcType=INTEGER})
      )
  </insert>
  <insert id="insertSelective" parameterType="com.triz.goldenideabox.model.Message">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sender != null">
        sender,
      </if>
      <if test="receiver != null">
        receiver,
      </if>
      <if test="isGroup != null">
        is_group,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sender != null">
        #{sender,jdbcType=INTEGER},
      </if>
      <if test="receiver != null">
        #{receiver,jdbcType=INTEGER},
      </if>
      <if test="isGroup != null">
        #{isGroup,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.triz.goldenideabox.model.Message">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_message
    <set>
      <if test="sender != null">
        sender = #{sender,jdbcType=INTEGER},
      </if>
      <if test="receiver != null">
        receiver = #{receiver,jdbcType=INTEGER},
      </if>
      <if test="isGroup != null">
        is_group = #{isGroup,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.triz.goldenideabox.model.Message">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_message
    set sender = #{sender,jdbcType=INTEGER},
      receiver = #{receiver,jdbcType=INTEGER},
      is_group = #{isGroup,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectChatUser" parameterType="java.lang.Integer" resultType="com.alibaba.fastjson.JSONObject">
    select t.id id, u. name name, u.introduction introduction, u.image image, ifnull(n.num, 0) num from (
      select sender id from t_message where receiver = #{id,jdbcType=INTEGER} and is_group = 0 group by sender union
      select receiver id from t_message where sender = #{id,jdbcType=INTEGER} and is_group = 0 group by receiver ) t
    left join (
      select sender id, count(sender) num from t_message where receiver = #{id,jdbcType=INTEGER} and is_group = 0 and state = 0 group by sender ) n
    on t.id = n.id
    left join t_user u on t.id = u.id group by t.id
  </select>



  <select id="selectChatGroup"  resultType="com.alibaba.fastjson.JSONObject">
    select r.id id, r.name name, r.remark remark, count(m.receiver) num from sys_role r
      left join t_message m on r.id = m.receiver and m.is_group = 1 and m.time > #{time,jdbcType=TIMESTAMP}
      where r.id in ( select role_id from sys_user_role where user_id = #{id,jdbcType=INTEGER} ) group by r.id;
  </select>


  <select id="selectChatUserRecord" parameterType="java.lang.Integer" resultMap="BaseResultMap">

    select
    <include refid="Base_Column_List" />
    from t_message
    where (sender = #{userId,jdbcType=INTEGER} and receiver = #{chatId,jdbcType=INTEGER})
    or (sender = #{chatId,jdbcType=INTEGER} and receiver = #{userId,jdbcType=INTEGER})
    and is_group = 0 ORDER BY time
  </select>
  <select id="selectChatGroupRecord" parameterType="java.lang.Integer" resultType="com.alibaba.fastjson.JSONObject">

    select
    m.sender sender,u.`name` name,u.image image,m.time time,m.content content
    from t_message m LEFT JOIN t_user u ON m.sender = u.id
    where  m.receiver = #{groupId,jdbcType=INTEGER}

    and m.is_group = 1 ORDER BY m.time
  </select>
  <update id="changeUnread" parameterType="java.lang.Integer">

    update t_message
    set state = 1
    where sender = #{chatId,jdbcType=INTEGER} and receiver = #{userId,jdbcType=INTEGER} and is_group = 0
  </update>
</mapper>